<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="boardMapper">


<!-- board 관련 -->
 <resultMap type="Board" id="board_rm">
        <!-- DB에서 PK에 해당하는 필드, 컬럼을 작성하는 태그 -->
     <id property = "boardNo" column="BOARD_NO"/>
     <!-- 나머지 일반 컬럼 -->
      <result property="boardTitle" column="BOARD_TITLE" />
      <result property="boardContent" column="BOARD_CONTENT" />
      <result property="boardDate" column="BOARD_DATE" />
      <result property="boardUpdateDate" column="BOARD_UPDATE_DATE" />
      <result property="boardView" column="BOARD_VIEW" />
      <result property="boardDelFlag" column="BOARD_DEL_FL" />
      
      <result property="memberNo" column="MEMBER_NO" />
      <result property="boardTypeNo" column="BOARD_TYPE_NO" />
      <result property="memberNickname" column="MEMBER_NICKNAME" />
      <result property="boardName" column="BOARD_NAME" />
      <result property="boardNo2" column="BOARD_NO2" />
      <result property="memberNo2" column="MEMBER_NO2" />
      
      <result property="commentCount" column="COMMENT_COUNT" />
      <result property="likeCount" column="LIKE_COUNT" />
      
      <result property="thumbnail" column="THUMBNAIL" />
      
      <result property="profileImg" column="PROFILE_IMG" />
      
      <result property="authority" column="AUTHORITY" />
      
      <!-- 무조건 게시글에 있는 사진들을 쭉 보여줌 -->
      <collection property="imgList" javaType="java.util.ArrayList"
      	ofType="BoardImg" select="selectBoardImgList" column="BOARD_NO"/>
      	
      <!-- 게시글에 있는 댓글 쭉 보여줌 -->
      <collection property="commentList" javaType="java.util.ArrayList"
      	ofType="Comment" select="commentList" column="BOARD_NO"></collection>
      	
  </resultMap>
  
 <!-- boardImg 관련 -->
 <resultMap type="BoardImg" id="boardImg_rm">
        <!-- DB에서 PK에 해당하는 필드, 컬럼을 작성하는 태그 -->
     <id property = "boardImgNo" column="BOARD_IMG_NO"/>
     <!-- 나머지 일반 컬럼 -->
      <result property="boardNo" column="BOARD_NO" />
      <result property="boardImgAddress" column="BOARD_IMG_ADDRESS" />
      <result property="boardImgOrder" column="BOARD_IMG_ORDER" />
  </resultMap>
  
<!-- comment 관련 -->
 <resultMap type="Comment" id="comment_rm">
        <!-- DB에서 PK에 해당하는 필드, 컬럼을 작성하는 태그 -->
     <id property = "commentNo" column="COMMENT_NO"/>
     <!-- 나머지 일반 컬럼 -->
      <result property="commentContent" column="COMMENT_CONTENT" />
      <result property="commentCount" column="COMMENT_COUNT" />
      <result property="commentDate" column="COMMENT_DATE" />
      <result property="boardNo" column="BOARD_NO" />
      <result property="boardTitle" column="BOARD_TITLE" />
      <result property="memberNo" column="MEMBER_NO" />
      <result property="commentParent" column="COMMENT_PARENT" />
		  <result property="memberNickname" column="MEMBER_NICKNAME"/>
		  <result property="profileImg" column="PROFILE_IMG"/>
			<result property="commentDelFl" column="COMMENT_DEL_FL"/>
			<result property="parentNo" column="PARENT_NO"/>
  </resultMap>



  
  <select id="boardTypeList" resultType="map">
  	SELECT * FROM "BOARD_TYPE" ORDER BY 1
  </select>

<!-- 게시글 삽입 -->
<!-- 마이바티스 동적 SQL -->
	<insert id="boardWrite" parameterType="Board" useGeneratedKeys="true">
		<selectKey keyProperty="boardNo" resultType="_int" order="BEFORE">
			SELECT SEQ_BOARD_NO.NEXTVAL FROM DUAL	
		</selectKey>
		INSERT INTO "BOARD" 
		VALUES(#{boardNo}, #{boardTitle}, #{boardContent}, 
			DEFAULT, NULL, DEFAULT, DEFAULT, #{memberNo}, #{boardTypeNo})
	</insert>
	
	
	<insert id="insertBoardImgList">
		INSERT INTO "BOARD_IMG" 
			SELECT SEQ_BOARD_IMG_NO.NEXTVAL BOARD_IMG_NO, A.* FROM
			<foreach collection="list" item="img" open="(" close=") A" separator="UNION ALL">
				SELECT #{img.boardNo} BOARD_NO, 
							#{img.boardImgAddress} BOARD_IMG_ADDRESS,
							#{img.boardImgOrder} BOARD_IMG_ORDER
				FROM DUAL
			</foreach>
	</insert>
	
	<!-- 와글와글 게시판 수 조회 -->
<!-- 	<select id="getListCount" resultType="_int">
		SELECT COUNT(*) FROM "BOARD"
		WHERE BOARD_TYPE_NO = #{boardTypeNo}
		AND BOARD_DEL_FL = 'N'
	</select> -->
	
	<!-- 와글와글 게시판 리스트 조회 -->
		<select id="selecBoardtList" resultMap="board_rm">
			SELECT BOARD_TYPE_NO, BOARD_NO, BOARD_TITLE, MEMBER_NICKNAME, BOARD_VIEW, MEMBER_NO,
			<![CDATA[
				CASE
						WHEN CURRENT_DATE - BOARD_DATE < 1/24/60
						THEN FLOOR((CURRENT_DATE - BOARD_DATE) *24*60*60) || '초 전'
						WHEN CURRENT_DATE - BOARD_DATE < 1/24
						THEN FLOOR((CURRENT_DATE - BOARD_DATE) *24*60) || '분 전'
						WHEN CURRENT_DATE - BOARD_DATE < 1
						THEN FLOOR((CURRENT_DATE - BOARD_DATE) *24) || '시간 전'
						ELSE TO_CHAR(BOARD_DATE, 'YYYY-MM-DD')
				END BOARD_DATE,
			]]>
			(SELECT COUNT(*) FROM "COMMENT" C 
				WHERE C.BOARD_NO = B.BOARD_NO) COMMENT_COUNT,
			(SELECT COUNT(*) FROM "BOARD_LIKE" L 
				WHERE L.BOARD_NO2 = B.BOARD_NO) LIKE_COUNT,
			(SELECT BOARD_IMG_ADDRESS FROM "BOARD_IMG" I 
				WHERE BOARD_IMG_ORDER = 0 AND I.BOARD_NO = B.BOARD_NO) THUMBNAIL
			FROM BOARD B
			JOIN "MEMBER" USING (MEMBER_NO)
			WHERE BOARD_TYPE_NO = #{boardTypeNo}
			AND BOARD_DEL_FL = 'N'
 			<!-- 검색어 있는 경우 -->
			<if test='query != null and query != ""'>
				<choose>
					<when test='key == "t"'>
							AND BOARD_TITLE LIKE '%${query}%'
					</when>
					<when test='key == "c"'>
							AND BOARD_CONTENT LIKE '%${query}%'
					</when>
					<when test='key == "tc"'>
							AND (BOARD_TITLE LIKE '%${query}%' OR BOARD_CONTENT LIKE '%${query}%')
					</when>
					<otherwise>
							AND MEMBER_NICKNAME LIKE '%${query}%'
					</otherwise>
				</choose>
			</if>
			<!-- 최신순, 조회수, 좋아요 -->
			<choose>
					<when test='sort == "view"'>
						ORDER BY BOARD_VIEW DESC, BOARD_NO DESC
					</when>
					<when test='sort == "like"'>
						ORDER BY LIKE_COUNT DESC, BOARD_NO DESC
					</when>
					<otherwise>
						ORDER BY BOARD_NO DESC
					</otherwise>
			</choose>
		<!-- 	ORDER BY BOARD_NO DESC -->
	</select>
	
	<!-- 와글와글 게시판 검색 조건에 맞는 게시글 수 조회 -->
	<select id="getListCountSearch" resultType="_int">
		SELECT COUNT(*) FROM "BOARD"
		JOIN "MEMBER" USING ("MEMBER_NO")
		WHERE BOARD_TYPE_NO = #{boardTypeNo}
		AND BOARD_DEL_FL = 'N'
		<if test='query != null and query != ""'>
			<choose>
				<when test='key == "t"'>
						AND BOARD_TITLE LIKE '%${query}%'
				</when>
				<when test='key == "c"'>
						AND BOARD_CONTENT LIKE '%${query}%'
				</when>
				<when test='key == "tc"'>
						AND (BOARD_TITLE LIKE '%${query}%' OR BOARD_CONTENT LIKE '%${query}%')
				</when>
				<otherwise>
						AND MEMBER_NICKNAME LIKE '%${query}%'
				</otherwise>
			</choose>
		</if>
	</select>
	

	<!-- 와글와글 게시판 검색 조건에 맞는 게시글 불러오기 -->
	<select id="selecBoardtListSearch" resultMap="board_rm">
			SELECT BOARD_TYPE_NO, BOARD_NO, BOARD_TITLE, MEMBER_NICKNAME, BOARD_VIEW, MEMBER_NO,
			<![CDATA[
				CASE
						WHEN CURRENT_DATE - BOARD_DATE < 1/24/60
						THEN FLOOR((CURRENT_DATE - BOARD_DATE) *24*60*60) || '초 전'
						WHEN CURRENT_DATE - BOARD_DATE < 1/24
						THEN FLOOR((CURRENT_DATE - BOARD_DATE) *24*60) || '분 전'
						WHEN CURRENT_DATE - BOARD_DATE < 1
						THEN FLOOR((CURRENT_DATE - BOARD_DATE) *24) || '시간 전'
						ELSE TO_CHAR(BOARD_DATE, 'YYYY-MM-DD')
				END BOARD_DATE,
			]]>
			(SELECT COUNT(*) FROM "COMMENT" C 
				WHERE C.BOARD_NO = B.BOARD_NO) COMMENT_COUNT,
			(SELECT COUNT(*) FROM "BOARD_LIKE" L 
				WHERE L.BOARD_NO2 = B.BOARD_NO) LIKE_COUNT,
			(SELECT BOARD_IMG_ADDRESS FROM "BOARD_IMG" I 
				WHERE BOARD_IMG_ORDER = 0 AND I.BOARD_NO = B.BOARD_NO) THUMBNAIL
			FROM BOARD B
			JOIN "MEMBER" USING (MEMBER_NO)
			WHERE BOARD_TYPE_NO = #{boardTypeNo}
			AND BOARD_DEL_FL = 'N'
			<!-- 검색어 있는 경우 -->
			<if test='query != null and query != ""'>
				<choose>
					<when test='key == "t"'>
							AND BOARD_TITLE LIKE '%${query}%'
					</when>
					<when test='key == "c"'>
							AND BOARD_CONTENT LIKE '%${query}%'
					</when>
					<when test='key == "tc"'>
							AND (BOARD_TITLE LIKE '%${query}%' OR BOARD_CONTENT LIKE '%${query}%')
					</when>
					<otherwise>
							AND MEMBER_NICKNAME LIKE '%${query}%'
					</otherwise>
				</choose>
			</if>
			<!-- 최신순, 조회수, 좋아요 -->
				<choose>
						<when test='sort == "view"'>
							ORDER BY BOARD_VIEW DESC, BOARD_NO DESC
						</when>
						<when test='sort == "like"'>
							ORDER BY LIKE_COUNT DESC, BOARD_NO DESC
						</when>
						<when test='sort == "new"'>
							ORDER BY BOARD_NO DESC
						</when>
				</choose>
	</select>
	
	
	
	<!-- 게시글 상세조회 -->
	<select id="boardDetail" resultMap="board_rm">
		SELECT BOARD_TYPE_NO, BOARD_TITLE, BOARD_CONTENT, MEMBER_NICKNAME, PROFILE_IMG, BOARD_VIEW,
			BOARD_NO, MEMBER_NO,
			TO_CHAR(BOARD_DATE, 'YYYY-MM-DD ') || 
			<![CDATA[
				CASE
						WHEN CURRENT_DATE - BOARD_DATE < 1/24/60
						THEN FLOOR((CURRENT_DATE - BOARD_DATE) *24*60*60) || '초 전'
						WHEN CURRENT_DATE - BOARD_DATE < 1/24
						THEN FLOOR((CURRENT_DATE - BOARD_DATE) *24*60) || '분 전'
						WHEN CURRENT_DATE - BOARD_DATE < 1
						THEN FLOOR((CURRENT_DATE - BOARD_DATE) *24) || '시간 전'
				END BOARD_DATE,
			]]>
			(SELECT COUNT(*) FROM "COMMENT" C WHERE C.BOARD_NO = B.BOARD_NO) COMMENT_COUNT,
			(SELECT COUNT(*) FROM "BOARD_LIKE" L WHERE L.BOARD_NO2 = B.BOARD_NO) LIKE_COUNT
		FROM BOARD B
		JOIN "MEMBER" USING (MEMBER_NO)
		WHERE BOARD_NO = #{boardNo}
		AND BOARD_DEL_FL = 'N'
	</select>
	
	<!-- 게시글 상세조회 + 이미지 -->
	<select id="selectBoardImgList" resultMap="boardImg_rm">
		SELECT * FROM "BOARD_IMG"
		WHERE BOARD_NO = #{boardNo}
		ORDER BY BOARD_IMG_ORDER
	</select>
	
	<!-- 로그인 멤버가 좋아요 눌렀는지 확인하기 -->
	<select id="checkLike" resultType="_int">
		SELECT COUNT(*) FROM "BOARD_LIKE"
		WHERE BOARD_NO2 = #{boardNo2}
		AND MEMBER_NO2 = #{memberNo2}
	</select>
	
	
	<!-- 게시글 좋아요 취소ㅠ -->
	<delete id="boardLikeDelete">
		DELETE FROM "BOARD_LIKE" 
		WHERE BOARD_NO2 = #{boardNo}
		AND MEMBER_NO2 = #{memberNo}
	</delete>
	
	<!-- 게시글 좋아용~ -->
	<insert id="boardLikeInsert">
		INSERT INTO "BOARD_LIKE"
		VALUES(#{boardNo}, #{memberNo})
	</insert>
	
	<!-- 조회수 증가~ -->
	<update id="updateBoardView">
		UPDATE "BOARD" SET
		BOARD_VIEW = BOARD_VIEW+1
		WHERE BOARD_NO = #{boardNo}
	</update>
	
	
	<!-- 댓글 불러오기~~~~ -->
	<select id="commentList" resultMap="comment_rm">
		SELECT LEVEL, C.* FROM
			(SELECT C.COMMENT_NO, COMMENT_CONTENT,
			 TO_CHAR(COMMENT_DATE, 'YYYY-MM-DD ') || 
				<![CDATA[
					CASE
							WHEN CURRENT_DATE - COMMENT_DATE < 1/24/60
							THEN FLOOR((CURRENT_DATE - COMMENT_DATE) *24*60*60) || '초 전'
							WHEN CURRENT_DATE - COMMENT_DATE < 1/24
							THEN FLOOR((CURRENT_DATE - COMMENT_DATE) *24*60) || '분 전'
							WHEN CURRENT_DATE - COMMENT_DATE < 1
							THEN FLOOR((CURRENT_DATE - COMMENT_DATE) *24) || '시간 전'
					END COMMENT_DATE, 
				]]>
			 C.COMMENT_PARENT, COMMENT_DEL_FL,
				MEMBER_NO, BOARD_NO, MEMBER_NICKNAME, PROFILE_IMG, AUTHORITY,
			 (SELECT COUNT(*) FROM "COMMENT" WHERE BOARD_NO = C.BOARD_NO) COMMENT_COUNT,
			 (SELECT MEMBER_NO FROM "COMMENT" WHERE COMMENT_NO = C.COMMENT_PARENT) PARENT_NO
			FROM "COMMENT" C
			JOIN "MEMBER" USING(MEMBER_NO)
			WHERE BOARD_NO = #{boardNo}) C
		START WITH COMMENT_PARENT = 0
		CONNECT BY PRIOR COMMENT_NO = COMMENT_PARENT
		ORDER SIBLINGS BY COMMENT_NO
	</select>
	
	
	<!-- 게시글 삭제 -->
	<update id="boardDelete">
		UPDATE "BOARD" SET
		BOARD_DEL_FL = 'Y'
		WHERE BOARD_NO = #{boardNo}
	</update>
	
	
	<!-- 게시글 수정 - 제목+내용 -->
	<update id="updateBoard">
		UPDATE "BOARD" SET
		BOARD_TITLE = #{boardTitle},
		BOARD_CONTENT = #{boardContent},
		BOARD_UPDATE_DATE = CURRENT_DATE
		WHERE BOARD_NO = #{boardNo}
	</update>
	
	
	<!-- 게시글 수정 - 이미지 삭제 -->
	<delete id="updateDeleteImg">
		DELETE FROM "BOARD_IMG"
		${condition}
	</delete>
	

	<!-- 게시글 수정 - 이미지 수정 업데이트 -->
	<update id="updateBoardImg">
		UPDATE "BOARD_IMG" SET
		BOARD_IMG_ADDRESS = #{boardImgAddress}
		WHERE BOARD_NO = #{boardNo}
		AND BOARD_IMG_ORDER = #{boardImgOrder}
	</update>
	
	
	<!-- 게시글 수정 - 이미지 수정 -->
	<insert id="boardImgInsert">
		INSERT INTO "BOARD_IMG"
		VALUES(SEQ_BOARD_IMG_NO.NEXTVAL, #{boardNo}, #{boardImgAddress}, #{boardImgOrder})
	</insert>	
	
	
	
	<!-- 댓글 등록을 해봅시다 -->
	<insert id="commentWrite" useGeneratedKeys="true">
		INSERT INTO "COMMENT"
		VALUES(SEQ_COMMENT_NO.NEXTVAL, #{commentContent},
			<if test='commentParent == 0'>
				0,
			</if>
			<if test='commentParent != 0'>
				#{commentParent},
			</if>
			<choose>
				<when test='commentDelFl.equals("S")'>
					#{commentDelFl},
				</when>
				<otherwise>
					DEFAULT,
				</otherwise>
			</choose>
			 #{memberNo}, #{boardNo}, DEFAULT)
		<selectKey keyProperty="commentNo" resultType="int" order="AFTER">
			SELECT SEQ_COMMENT_NO.CURRVAL FROM DUAL
		</selectKey>
	</insert>
	
	
	<!-- 댓글 수정 입니다 -->
	<update id="commentUpdate">
		UPDATE "COMMENT" SET
		COMMENT_CONTENT = #{commentContent}
		WHERE COMMENT_NO = #{commentNo}
	</update>
	
	
	<!-- 댓글 삭제!!! -->
	<update id="commentDelete">
		UPDATE "COMMENT" SET
		COMMENT_DEL_FL = 'Y',
		${condition}
	</update>
	
	
	<!-- 댓글의 부모댓글의 댓글번호를 찾아보아요 -->
	<select id="selectParent" resultType="_int">
		SELECT COMMENT_PARENT FROM "COMMENT"
		WHERE COMMENT_NO = #{coParent}
	</select>
	
	
	
	
	<!-- 알림에 사용되는 SQL문입니다! -->
		
		<!-- 게시글의 작성자 번호 찾기 -->
		<select id="selectBoardWriterNo" parameterType="_int" resultType="_int">
			SELECT MEMBER_NO
			FROM "BOARD"
			WHERE BOARD_NO = #{boardNo}
		</select>
	
		<select id="selectCommentWriterNo" parameterType="_int" resultType="_int">
			SELECT MEMBER_NO
			FROM "COMMENT"
			WHERE COMMENT_NO = #{commentNo}
		</select>
	
	<!-- END 알림 SQL -->
	
	<!-- 게시판 이미지 이름 조회 -->
	<select id="selectBoardImageList" resultType="string">
		SELECT
			SUBSTR(BOARD_IMG_ADDRESS  , INSTR(BOARD_IMG_ADDRESS, '/', -1)+1, LENGTH(BOARD_IMG_ADDRESS)) 
		FROM BOARD_IMG bi 
		WHERE BOARD_IMG_ADDRESS IS NOT NULL
	</select>
	
	
	<select id="selectBoardDelete" resultType="int">
		SELECT COUNT(*)
		FROM BOARD
		WHERE BOARD_NO = #{boardNo} AND BOARD_DEL_FL = 'N'
	</select>

</mapper>